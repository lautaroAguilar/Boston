generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model company {
  id                 Int       @id @default(autoincrement())
  name               String    @db.VarChar(100)
  cuit               String    @unique(map: "cuit") @db.VarChar(20)
  business_name      String    @unique(map: "business_name") @db.VarChar(150)
  first_survey_link  String?   @db.Text
  second_survey_link String?   @db.Text
  created_at         DateTime? @default(now()) @db.Timestamp(0)
  updated_at         DateTime? @default(now()) @db.Timestamp(0)
}

model company_contact {
  id         Int       @id @default(autoincrement())
  company_id Int
  name       String    @db.VarChar(100)
  email      String    @unique(map: "email") @db.VarChar(100)
  notes      String?   @db.Text
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)

  @@index([company_id], map: "company_id")
}

model cost_center {
  id         Int       @id @default(autoincrement())
  company_id Int
  name       String    @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)

  @@index([company_id], map: "company_id")
}

model languages {
  id             Int              @id @default(autoincrement())
  name           String           @unique(map: "name") @db.VarChar(50)
  teacherLanguages TeacherLanguages[]
  progress student_progress[]
}

model modules {
  id   Int    @id @default(autoincrement())
  name String @unique(map: "name") @db.VarChar(100)
  progress             student_progress[]
}

model roles {
  id   Int    @id @default(autoincrement())
  name String @unique(map: "name") @db.VarChar(100)
}

model sector {
  id         Int       @id @default(autoincrement())
  company_id Int
  name       String    @db.VarChar(100)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)

  @@index([company_id], map: "company_id")
}

model student_progress {
  id          Int       @id @default(autoincrement())
  student_id  Int
  language_id Int
  module_id   Int
  start_date  DateTime  @db.Date
  end_date    DateTime? @db.Date
  is_current  Boolean   @default(true)
  student     students  @relation(fields: [student_id], references: [id])
  language    languages @relation(fields: [language_id], references: [id])
  module      modules   @relation(fields: [module_id], references: [id])

  @@index([language_id], map: "language_id")
  @@index([module_id], map: "module_id")
  @@index([student_id], map: "student_id")
  @@unique([student_id, is_current], name: "unique_active_module")
}

model students {
  id                    Int               @id @default(autoincrement())
  first_name            String           @db.VarChar(100)
  last_name             String           @db.VarChar(100)
  email                 String           @unique(map: "email") @db.VarChar(100)
  initial_leveling_date DateTime?        @db.Date
  sid                   String?          @db.VarChar(50)
  company_id            Int
  cost_center_id        Int
  sector_id             Int
  active                Boolean?         @default(true)
  created_at            DateTime?        @default(now()) @db.Timestamp(0)
  updated_at            DateTime?        @default(now()) @db.Timestamp(0)
  progress             student_progress[]

  @@index([company_id], map: "company_id")
  @@index([cost_center_id], map: "cost_center_id")
  @@index([sector_id], map: "sector_id")
}

model users {
  id         Int       @id @default(autoincrement())
  first_name String    @db.VarChar(100)
  last_name  String    @db.VarChar(100)
  email      String    @unique(map: "email") @db.VarChar(100)
  password   String    @db.VarChar(60)
  role_id    Int
  belongs_to String?   @db.VarChar(50)
  created_at DateTime? @default(now()) @db.Timestamp(0)
  last_login DateTime? @db.Timestamp(0)
  active     Boolean?  @default(true)

  @@index([role_id], map: "role_id")
}

model ProfessionalCategory {
  id       Int       @id @default(autoincrement())
  name     String    @unique @db.VarChar(50)
  teachers Teacher[]
}

model Teacher {
  id                     Int                 @id @default(autoincrement())
  lastName               String
  firstName              String
  email                  String              @unique
  phone                  String?
  CBU                    String?
  CUIT                   String?
  professionalCategoryId Int
  professionalCategory   ProfessionalCategory @relation(fields: [professionalCategoryId], references: [id])
  languages             TeacherLanguages[]   
  fictitiousSeniority   Int
  bostonSeniority       Int
  observations          String?              @db.Text
  createdAt             DateTime             @default(now())
  updatedAt             DateTime             @updatedAt
}

model TeacherLanguages {
  teacher    Teacher   @relation(fields: [teacherId], references: [id])
  teacherId  Int
  language   languages @relation(fields: [languageId], references: [id])
  languageId Int

  @@id([teacherId, languageId])
}
